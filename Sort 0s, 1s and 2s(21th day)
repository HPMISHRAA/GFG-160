Given an array arr[] containing only 0s, 1s, and 2s. Sort the array in ascending order.

Examples:

Input: arr[] = [0, 1, 2, 0, 1, 2]
Output: [0, 0, 1, 1, 2, 2]
Explanation: 0s 1s and 2s are segregated into ascending order.
Input: arr[] = [0, 1, 1, 0, 1, 2, 1, 2, 0, 0, 0, 1]
Output: [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2]
Explanation: 0s 1s and 2s are segregated into ascending order.
Constraints:
1 <= arr.size() <= 106
0 <= arr[i] <= 2

/* class Solution {
    // Function to sort an array of 0s, 1s, and 2s
    public void sort012(int[] arr) {
      int n=arr.length;
      int low=0,mid=0,high=n-1;
      while(mid<=high){
          if(arr[mid]==0){
              swap(low,mid,arr);
              low++;
              mid++;
          }else if(arr[mid]==1){
              mid++;
          }else if(arr[mid]==2){
              swap(mid,high,arr);
              high--;
          }
      }
    }
    void swap(int i,int j,int[]arr){
        int temp=arr[i];
        arr[i]=arr[j];
        arr[j]=temp;
    }
}
*/
